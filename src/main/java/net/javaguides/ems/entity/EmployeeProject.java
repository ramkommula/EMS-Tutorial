package net.javaguides.ems.entity;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.Size;

@Entity
@Table(name = "employeeproject")
public class EmployeeProject 
{
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id; //Here, The values of this id field will be automatically generated by database on browser.
	
	
	@Size(min=4, max=50)
	private String ProjectName;
	
	@NotBlank
	@Email
	private String email;
	
	
	
	
	@NotBlank
	private String role;
//Whenever you create Parameterized constructor, make sure that u will also create default constructor because
//Hibernate internally uses properties to create our objects dynamically & it needs default constructor in JPA Entity.	
	public EmployeeProject() {
		
	}
	
	public EmployeeProject(@Size(min = 3, max = 50) String projectName, @NotBlank @Email String email,
			@NotBlank String role) {
		super();
		ProjectName = projectName;
		this.email = email;
		this.role = role;
	}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getProjectName() {
		return ProjectName;
	}

	public void setProjectName(String projectName) {
		ProjectName = projectName;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getRole() {
		return role;
	}

	public void setRole(String role) {
		this.role = role;
	}
	
	
	
}

